name: Deploy Documentation

on:
  push:
    branches: [ main, master ]
  release:
    types: [published]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build documentation
        run: |
          mkdir docs
          cp README.md docs/index.md
          cp DEVELOPER.md docs/developer-guide.md
          
          # Create downloads page with version info
          echo "# Downloads" > docs/downloads.md
          echo "" >> docs/downloads.md
          echo "## Latest Release" >> docs/downloads.md
          echo "" >> docs/downloads.md
          
          # Get latest release info
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
          VERSION=$(echo $LATEST_RELEASE | jq -r .tag_name)
          DATE=$(echo $LATEST_RELEASE | jq -r .published_at | cut -d'T' -f1)
          
          echo "Version: $VERSION (Released: $DATE)" >> docs/downloads.md
          echo "" >> docs/downloads.md
          echo "### Download Links" >> docs/downloads.md
          echo "- [Windows Installer](https://github.com/${{ github.repository }}/releases/latest/download/NetworkMonitor-Windows.zip)" >> docs/downloads.md
          echo "- [Linux Binary](https://github.com/${{ github.repository }}/releases/latest/download/NetworkMonitor-Linux.tar.gz)" >> docs/downloads.md
          echo "- [macOS App](https://github.com/${{ github.repository }}/releases/latest/download/NetworkMonitor-macOS.zip)" >> docs/downloads.md
          
          # Create mkdocs config
          echo "site_name: NetworkMonitor Documentation" > mkdocs.yml
          echo "theme: material" >> mkdocs.yml
          echo "nav:" >> mkdocs.yml
          echo "  - Home: index.md" >> mkdocs.yml
          echo "  - Downloads: downloads.md" >> mkdocs.yml
          echo "  - Developer Guide: developer-guide.md" >> mkdocs.yml
          
          mkdocs build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2